<templateSet group="JavaScript">
  <template name="comm" value="// ======================================&#10;// $comm$&#10;// ======================================&#10;" description="Inserts comment box" toReformat="false" toShortenFQNames="true">
    <variable name="comm" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="mo" value="import React from 'react';&#10;&#10;const $Name$ = (props) =&gt; (&#10;    $body$&#10;);&#10;&#10;export default $Name$" description="Inserts Dummy Component" toReformat="false" toShortenFQNames="true">
    <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="body" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="redcon" value="export const $param$_REQUEST = '$param$_REQUEST';&#10;export const $param$_SUCCESS = '$param$_SUCCESS';&#10;export const $param$_FAILURE = '$param$_FAILURE';" description="Redux Constants" toReformat="false" toShortenFQNames="true">
    <variable name="param" expression="capitalizeAndUnderscore(String)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="log" value="console.log($var$);" description="console.log" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="con" value="const $var$ = '$var$';" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="red" value="export function $reducerName$(state: $state$ = $init$, action: Action&lt;any&gt;): $state$ {&#10;    switch(action.type) {&#10;        case $action$:&#10;            return $return$;&#10;        default:&#10;            return state;&#10;}" description="Reducer template" toReformat="false" toShortenFQNames="true">
    <variable name="reducerName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="state" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="init" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="action" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="return" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="it" value="it('$Should$', function() {&#10;    assert.$END$&#10;});" description="it" toReformat="false" toShortenFQNames="true">
    <variable name="Should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="desc" value="describe('$test$', function() {&#10;&#10;});" description="describe" toReformat="false" toShortenFQNames="true">
    <variable name="test" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="$$" value="var $var$ = $('$sel$');" description="jQuery" toReformat="false" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="'$'" alwaysStopAt="true" />
    <variable name="sel" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="$" value="$('$SELECTION$')" description="jQuery selection" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>